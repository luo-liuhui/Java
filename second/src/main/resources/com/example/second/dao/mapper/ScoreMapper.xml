<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.second.dao.ScoreDao">
    <resultMap id="BaseResultMap" type="com.example.second.entity.Score">
        <id column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
<!--        <result column="age" property="age" jdbcType="INTEGER"/>-->
<!--        <result column="sex" property="sex" jdbcType="VARCHAR"/>-->
        <result column="coursename" property="coursename" jdbcType="VARCHAR"/>
        <result column="coursenature" property="coursenature" jdbcType="VARCHAR"/>
        <result column="coursescore" property="coursescore" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        uid, name, coursename,coursenature,coursescore
    </sql>

    <select id="findAllScores" resultType="com.example.second.entity.Score">
        select * from score
    </select>

    <select id="findScoreByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from score where name = #{name,jdbcType=VARCHAR}
    </select>

    <delete id="deleteScoresByIds">
        delete from score where uid in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getCountScores" resultType="java.lang.Integer">
        select count(uid) as count from score
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from score
        where uid = #{uid,jdbcType=BIGINT}
    </select>
    <delete id="deleteScoreById" parameterType="java.lang.Long">
        delete from score
        where uid = #{uid,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.example.second.entity.Score">
        insert into score (uid, name, age,
        sex)
        values (#{uid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},#{coursename,jdbcType=VARCHAR},
                #{coursenature,jdbcType=VARCHAR},#{coursescore,jdbcType=VARCHAR})
    </insert>
    <insert id="addScore" parameterType="com.example.second.entity.Score">
        insert into score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="name != null">
                name,
            </if>
<!--            <if test="age != null">-->
<!--                age,-->
<!--            </if>-->
<!--            <if test="sex != null">-->
<!--                sex,-->
<!--            </if>-->
            <if test="coursename != null">
                coursename,
            </if>
            <if test="coursenature != null">
                coursenature,
            </if>
            <if test="coursescore != null">
                coursescore,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
<!--            <if test="age != null">-->
<!--                #{age,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="sex != null">-->
<!--                #{sex,jdbcType=VARCHAR},-->
<!--            </if>-->
            <if test="coursename != null">
                #{coursename,jdbcType=VARCHAR},
            </if>
            <if test="coursenature != null">
                #{coursenature,jdbcType=VARCHAR},
            </if>
            <if test="coursescore != null">
                #{coursescore,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateScore" parameterType="com.example.second.entity.Score">
        update score
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
<!--            <if test="age != null">-->
<!--                age = #{age,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="sex != null">-->
<!--                sex = #{sex,jdbcType=VARCHAR},-->
<!--            </if>-->
            <if test="coursename != null">
                coursename = #{coursename,jdbcType=VARCHAR},
            </if>
            <if test="coursenature != null">
                coursenature = #{coursenature,jdbcType=VARCHAR},
            </if>
            <if test="coursescore != null">
                coursescore = #{coursescore,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.second.entity.Score">
        update score
        set name = #{name,jdbcType=VARCHAR},
            coursename = #{coursename,jdbcType=VARCHAR},
            coursenature = #{coursenature,jdbcType=VARCHAR},
            coursescore = #{coursescore,jdbcType=VARCHAR},
--         age = #{age,jdbcType=INTEGER},
--         sex = #{sex,jdbcType=VARCHAR}
        where uid = #{uid,jdbcType=BIGINT}
    </update>
</mapper>